Script started on Wed 02 Nov 2016 05:45:45 PM EDT
]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ cat stack.h
#ifndef STACK_H
#define STACK_H

#include <iostream>
#include <iomanip>
#include <stdio.h>

struct example_structure
{
   int i;
   char c;
};

class Stack
{
   public:
      Stack( );
      ~Stack( ) { }
      int stack_size( );
      bool is_empty( );
      bool is_full( );
      example_structure top( );
      example_structure pop( );
      example_structure push(example_structure stack_element);
   private:
      static const int STACK_MAX = 10;
      example_structure data[STACK_MAX];
      int current_size;
};

#endif
]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ cat stack.cpp
#include <iostream>
#include "stack.h"

using namespace std;

Stack::Stack( )
{
   current_size = -1;
}

int Stack::stack_size( )
{
   return(current_size + 1);
}

bool Stack::is_empty( )
{
   if (current_size == -1)
      return 1;
   else
      return 0;
}

bool Stack::is_full( )
{
   if (current_size == STACK_MAX)
      return 1;
   else
      return 0;
}

example_structure Stack::top( )
{
   return data[current_size];
}

example_structure Stack::pop( )
{
   example_structure stack_element;
   if (!is_empty( ))
   {
      stack_element = data[current_size];
      current_size = current_size - 1;
      return stack_element;
   }
   else
      cout << "Could not return data. Stack is empty." << endl;
}

example_structure Stack::push(example_structure stack_element)
{
   if (!is_full( ))
   {
      current_size = current_size + 1;
      data[current_size] = stack_element;
   }
   else
      cout << "Could not insert data. Stack is full." << endl;
}
]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ cat driver.cpp
#include <iostream>
#include "stack.h"

using namespace std;

main( )
{
   //CREATE STRUCTURES TO PUSH TO STACK
   example_structure e1;
   e1.i = 10;
   e1.c = 'a';

   example_structure e2;
   e2.i = 11;
   e2.c = 'b';

   //DECLARE STACK OBJECT
   Stack stack_1;

   //PUSH STRUCTURES TO STACK
   stack_1.push(e1);
   stack_1.push(e2);

   //PRINT STACK
   for (int i = 0; i < 2; i++)
   {
      example_structure element = stack_1.pop( );
      cout << "int: " << element.i << " char: " << element.c;
      cout << endl;
   }
   cout << endl;
}
]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ g++ driver.cpp stack.cpp
]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ ./a.out
int: 11 char: b
int: 10 char: a

]0;brookecantwell@storm:~/CISC2200/HW8/ex[brookecantwell@storm ex]$ exit
exit

Script done on Wed 02 Nov 2016 05:46:02 PM EDT
